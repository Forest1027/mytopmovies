# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Deploy to Amazon ECS

on:
  workflow_dispatch:
  workflow_call:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: mtm           # set this to your Amazon ECR repository name
  ECS_SERVICE: MTM-Service-Load-Balancer                 # set this to your Amazon ECS service name
  ECS_CLUSTER: MTM-Cluster                 # set this to your Amazon ECS cluster name
  CONTAINER_NAME: mtm           # set this to the name of the container in the
  # containerDefinitions section of your task definition

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          role-to-assume: arn:aws:iam::896850397919:role/MTM_Github
          role-session-name: mtm_rolesession
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
